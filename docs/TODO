/  __ \ |         | |
| /  \/ |__   __ _| | _____  _ __ __ _
| |   | '_ \ / _` | |/ / _ \| '__/ _` |
| \__/\ | | | (_| |   < (_) | | | (_| |
 \____/_| |_|\__,_|_|\_\___/|_|  \__,_|

                 TODO
----------------------------------------

[ ] Global
	[X] send_global sub (Use a foreach statement for %uid's to send a NOTICE to each user? --Matthew)
[ ] NickServ
	[!] Make the nickserv core a module.
		[ ] Add sub's relating to nickserv into nickserv/main
	[!] Register
		[X] Check for valid a valid email address
		[X] Set default nickserv flags
		[ ] Set a limit to the number of accounts an email address can have
	[ ] Group
	[X] Identify
	[!] Drop
	[X] Enforce
	[!] Set
		[X] Set email, password, hidemail, enforce
		[ ] Set API
	[ ] Ghost
	[ ] Release
	[X] Account name (Sub done, module not)
	[X] Logout
[ ] ChanServ
	[X] Make the chanserv core a module
	[X] Register
	[ ] Drop
	[ ] Finish sync
	[ ] AKick
	[!] Owner/Protect/Op/Halfop/Voice
		[ ] Fix the help entries to be formatted perfectly.
	[!] Set (Founder, Successor, Restricted, Topiclock, Guard)
		[ ] Founder
		[ ] Successor
		[X] Topiclock
		[X] Guard
		[X] Restricted
		[X] Nostatus
		[X] Fantasy
		[X] Description
		[X] URL
	[!] Access list system (We're going to do a flag system with an XOP adapter)	
[ ] MemoServ
	[X] Make the memoserv core a module
	[ ] Send
	[ ] List
	[ ] Read
	[ ] Forward
	[ ] Delete
[ ] OperServ
	[O] Make the operserv core a module
	[ ] Restart
	[X] Shutdown
	[ ] Rehash
	[X] Module management (list, load, unload) [list done, somethings wrong with load and unload - perhaps module_exists is bugged --Matthew] 
	[ ] Make modload, modunload and protocols - unloadable
	[ ] Improve the error messages in modload, if the file doesn't exist say that.
	[X] The protocols need to be a module (Add $Chakora::MODULE{name} $Chakora::MODULE{author} and $Chakora::MODULE{version} to the top of the protocol --Matthew)
	[ ] AKill
	[ ] Jupe
	[X] Global
	[ ] Logonnews (Add a hook using hook_uid_add, sending a( ) notice(s) to users on connect? --Matthew)
[ ] HostServ
	[X] Make the hostserv core a module
	[ ] Set vHosts
	[ ] Delete vHost
	[ ] Group
	[ ] Request
	[?] On/Off 
[ ] Core
	[X] Add module_void
	[X] Add ctcp_reply
	[ ] Add module_is_loadable (check if the file exists perhaps?)
	[ ] Improve CTCP handling (make add_ctcp_handler and del_ctcp_handler perhaps?)
	[O] Add is_oper
[ ] Protocols
	[X] Add serv_kill
	[X] Add serv_enforce
	[ ] Add function to hold nicknames
 	[X] InspIRCd: find a way to properly tell if a user is an oper
	[X] Charybdis: find a way to properly tell if a user is an oper 
	[X] Add serv_jupe (InspIRCd's module still lacks this, developers who can create some sort of SID generator and check if its in use, go for it --Matthew)
	[X] InspIRCd: strip modes on a user in FJOIN (I was stupid, it already did that --Matthew)
	[X] Charybdis: Oper regex needs fixed (for one +a isn't always applied, also +o isn't the only mode, so the current one won't work --Matthew)
	[X] InspIRCd: Add raw_motd and raw_admin
	[X] Add serv_accoutname
	[X] Make a SID generator
	[ ] Make the UID generator use letters instead of numbers.
	[ ] Native ShadowIRCd support.
	[ ] Native ircd-ratbox support.
	[>] ircd-hybrid support.
	[>] UnrealIRCd support.
	[>] ircu support.
	[>] Bahamut support.
	[>] ircd-plexus support.
	[ ] TS6-generic support.
	[>] P10-generic support.
[ ] Docs
	[X] Add docs for the module api
	[!] Improve module api docs (add sidInfo and uidInfo for one)
[ ] Other
	[X] Allow custom services to be made and handled like others
	[ ] When chanserv/flags is done, add the +L flag creation there
	[ ] Make our own config parser, we really need one.
Key: 
	X = Done
	! = In development
	? = Still being questioned whether it should be in Chakora or not
	O = This didn't make the cut, this could be added later though	
	> = This has been planned for Chakora v1.1.
